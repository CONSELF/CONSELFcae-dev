/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
<<<<<<< HEAD
|  \\    /   O peration     | Version:  3.0.x                                 |
=======
|  \\    /   O peration     | Version:  4.x                                   |
>>>>>>> 90e2f8d87bcd3a8588545c2de68a62d5b5c54a99
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system/wallFilmRegion";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default none;
    ddt(deltaf*rhof) Euler;
    ddt(rhof,deltaf) Euler;
    ddt(deltaf*rhof,Uf) Euler;
    ddt(deltaf*rhof,hf) Euler;
}

divSchemes
{
    default none;
    div(phi,Uf) Gauss upwind;
    div(phid,deltaf) Gauss upwind;
    div(phi,hf) Gauss upwind;

    div(nHat) Gauss linear;
    div(grad(nHat)) Gauss linear;
}

gradSchemes
{
    default none;
    grad(pL) Gauss linear;
    grad(sigmaf) Gauss linear;
    snGradCorr(deltaf) Gauss linear;
    snGradCorr(pp) Gauss linear;
    snGradCorr(pu) Gauss linear;

    grad(radius) Gauss linear;
    grad(nHat) Gauss linear;
}

laplacianSchemes
{
    default none;
    laplacian(sigmaf,deltaf) Gauss linear uncorrected;
    laplacian(deltaCoeff,deltaf) Gauss linear uncorrected;
}

snGradSchemes
{
    snGrad(p) uncorrected;
    snGrad(deltaf) uncorrected;
}


// ************************************************************************* //
