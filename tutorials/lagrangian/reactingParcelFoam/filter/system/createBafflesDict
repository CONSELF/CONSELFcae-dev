/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
<<<<<<< HEAD
|  \\    /   O peration     | Version:  3.0.x                                 |
=======
|  \\    /   O peration     | Version:  4.x                                   |
>>>>>>> 90e2f8d87bcd3a8588545c2de68a62d5b5c54a99
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      createBafflesDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Whether to convert internal faces only (so leave boundary faces intact).
// This is only relevant if your face selection type can pick up boundary
// faces.
internalFacesOnly true;

// Baffles to create.
baffles
{
    cycLeft
    {
        //- Use predefined faceZone to select faces and orientation.
        type        faceZone;
        zoneName    cycLeft;

        patches
        {
            master
            {
                //- Master side patch

                name            cycLeft_half0;
                type            cyclic;
                neighbourPatch  cycLeft_half1;
            }
            slave
            {
                //- Slave side patch

                name            cycLeft_half1;
                type            cyclic;
                neighbourPatch  cycLeft_half0;
            }
        }
    }

    cycRight
    {
        //- Use predefined faceZone to select faces and orientation.
        type        faceZone;
        zoneName    cycRight;

        patches
        {
            master
            {
                //- Master side patch

                name            cycRight_half0;
                type            cyclic;
                neighbourPatch  cycRight_half1;
            }
            slave
            {
                //- Slave side patch

                name            cycRight_half1;
                type            cyclic;
                neighbourPatch  cycRight_half0;
            }
        }
    }
}


// ************************************************************************* //
